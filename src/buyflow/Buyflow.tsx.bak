import React, { useState } from 'react'
import NameStep from './NameStep'
import AgeStep from './AgeStep'
import EmailStep from './EmailStep'
import SummaryStep from './SummaryStep'

interface BuyflowProps {
  productId: ProductIds
}

export enum ProductIds {
// eslint-disable-next-line 
   devIns = 'dev_ins'
}

const PRODUCT_IDS_TO_NAMES = {
  [ProductIds.devIns]: 'Developer Insurance',
}

    
const Buyflow: React.FC<BuyflowProps> = (props) => {
  
  const initialState = {
            FirstN: '',
            LastN: '',
            email: '',
            age: 0
        };
   
  const [currentStep, setStep] = useState('name')
  const [collectedData, updateData] = useState(initialState)
    
  const getStepCallback = (nextStep: string) => (field: string, value: any) => {
  
    if (value !== "errorMsg" && value !== -1)  {
    
       if (typeof value === 'object' && value !== null) {
          
          
          /*
            updateData( collectedData => {
                return { ...collectedData, ['FirstN']: value['FirstN']}
            })
            
            updateData( collectedData => {
                return { ...collectedData, ['LastN']: value['LastN']}
            })
            */
            
/*           updateData({ ...collectedData, ['FirstN']: value['FirstN'] })
           updateData({...collectedData, ['LastN']: value['LastN'] })
*/
         
  //        updateData({ ...collectedData, ['FirstN']: value['FirstN'], ...collectedData, ['LastN']: value['LastN'] }) 
  //        console.log(value)          
          
          Object.entries(value).forEach(item => {
            console.log(item[0])
            updateData( collectedData => {
                return { ...collectedData, [item[0]]: item[1]}
            })
//            updateData({ ...collectedData, [item[0]]: item[1] })
          })
 
       } else {
          updateData({ ...collectedData, [field]: value })          
       }      
       setStep(nextStep)
    } 
    
  }
  return (
    <>
      <h4>Buying {PRODUCT_IDS_TO_NAMES[props.productId]}</h4>
      {(currentStep === 'name' && <NameStep cb={getStepCallback('email')} />) ||
       (currentStep === 'email' && <EmailStep cb={getStepCallback('age')} />) ||
        (currentStep === 'age' && (
          <AgeStep cb={getStepCallback('summary')} />
        )) ||
        (currentStep === 'summary' && (
          <SummaryStep collectedData={collectedData} />
        ))}
    </>
  )
}

export default Buyflow
